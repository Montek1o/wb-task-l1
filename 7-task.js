// Task:
// Задача о коллекции функций: у вас есть массив функций, напишите код, который вызовет каждую функцию в этом массиве и выведет их порядковый номер. 
// Однако, вызов каждой функции должен происходить только после вызова предыдущей функции.
// Другими словами, нужно выполнить следующие шаги:
// * Вызвать первую функцию из массива.
// * После завершения работы первой функции вызвать вторую функцию.
// * После завершения работы второй функции вызвать третью функцию.
// * И так далее, пока все функции в массиве не будут вызваны по порядку.

// так как по условию неясно какие должны быть функции, предположим у нас часть синхронных, и часть асинхронных
const functions = [
  function f1() {
    return 'Первая функция';
  },
  function f2() {
    return new Promise((resolve) => {
      return setTimeout(() => resolve('Вторая функция'), 2000);
    });
  },
  function f3() {
    return new Promise((resolve) => {
      return setTimeout(() => resolve('Третья функция'), 500);
    });
  },
  function f4() {
    return 'Четвертая функция';
  },
];

// используем async/await для работы с асинхронным кодом
async function callFunction(functions) {
  // циклом вызываем по очереди каждую функцию
  for (let i = 0; i < functions.length; i++) {
    // ждём выполнение функции благодаря await
    const res = await functions[i]();
    // после чего выводим результат и переходим к следующей итерации
    console.log(res, i + 1);
  }
}

callFunction(functions);
// 'Первая функция' 1
// 'Вторая функция' 2
// 'Третья функция' 3
// 'Четвертая функция' 4

